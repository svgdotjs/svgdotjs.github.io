Title: Getting started

----

Text: 

# Getting started

## Preparation

SVG.js assumes you have an HTML element with an `id` attribute created and ready to serve as the wrapper. Something like:

```html
<!DOCTYPE html>
<html>
<head>
  <title>SVG.js</title>
</head>
<body>
  <div id="drawing"></div>
</body>
</html>
```

## Create an SVG document

Next, use the `SVG()` function and its `addTo` method to create an SVG document within the wrapper element:

```javascript
var draw = SVG().addTo('#drawing').size(300, 300)
var rect = draw.rect(100, 100).attr({ fill: '#f06' })
```
The first argument can either be an id of the element or the selected element itself. This will generate the following output:

```html
<div id="drawing">
  <svg xmlns="http://www.w3.org/2000/svg" version="1.1" xmlns:xlink="http://www.w3.org/1999/xlink" width="300" height="300">
    <rect width="100" height="100" fill="#f06"></rect>
  </svg>
</div>
```

By default the svg drawing follows the dimensions of its parent, in this case `#drawing`:

```javascript
var draw = SVG().addTo('#drawing').size('100%', '100%')
```

## Checking for SVG support

By default, SVG.js assumes the client's browser supports SVG. You can test support as follows:

```javascript
if (SVG.supported) {
  var draw = SVG().addTo('#drawing')
  var rect = draw.rect(100, 100)
} else {
  alert('SVG not supported')
}
```


## Wait for DOM to be loaded

This might seem obvious to many but it's still worth mentioning. If you include your js files in the head of your document, make sure to wait for the DOM to be loaded:

```javascript
SVG.on(document, 'DOMContentLoaded', function() {
  var draw = SVG().addTo('#drawing')
})
```

This is not an issue if you include your js at the bottom.


## Pure SVG
SVG.js also works outside of the HTML DOM, inside an SVG document for example:

```xml
<?xml version="1.0" encoding="utf-8" ?>
<svg id="drawing" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" >
  <script type="text/javascript" xlink:href="svg.min.js"></script>
  <script type="text/javascript">
    <![CDATA[
      var draw = SVG().addTo('#drawing')
      draw.rect(100,100).animate().fill('#f03').move(100,100)
    ]]>
  </script>
</svg>
```

## Playground
Just to get you going, here is a basic setup. Everything is present to start fiddling.

<iframe width="100%" height="300" src="//jsfiddle.net/torkleyy/m2kLyzxw/6/embedded/js,result/?accentColor=f06" allowfullscreen="allowfullscreen" frameborder="0"></iframe>

----

Description: Basic information you need to know to get started with SVG.js. From building a new SVG document to adopting one.
